theme_bw()+theme(legend.position = "none",panel.border = element_rect(colour = "black", fill=NA), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0),text=element_text(size=20))
}
plotViolin(df,"mode")
plotViolin(df,"matrix")
plotViolin(df,"tissue")
plotViolin(df,"analyzer")
plotViolin(df,"tissue")
df$mz.mean
median(df$mz.mean)
df$mz.mean<-median(df$mz.mean)
df$mz.mean<-c(382.5062, 339.9231, 377.9939, 528.1975, 708.4877, 991.4790, 484.0646, 464.2529, 553.3530, 844.5998, 257.0760, 743.6692)
df$mz.mean<median(df$mz.mean)
df$mzrange<-df$mz.mean<median(df$mz.mean)
df$auc<-c(0.71,0.65,0.71,0.77,0.78,0.8,0.68,0.71,0.69,0.74,0.84,0.77)
l="nothing"
plotViolin<-function(df,var){
v<-unique(df[[var]])
if(length(v)==2){
a<-df$auc[df[[var]]==v[1]]
b<-df$auc[df[[var]]==v[2]]
pval<-wilcox.test(a, b, alternative = "two.sided")$p.value
fc<-log2(mean(a)/mean(b))
}
else{
pval<-summary(aov(auc ~ df[[var]], data = df))[[1]]$`Pr(>F)`[1]
a<-df[[var]][which.max(df$auc)]
b<-df[[var]][which.min(df$auc)]
fc<-log2(mean(df$auc[df[[var]]==a])/mean(df$auc[df[[var]]==b]))
}
l<-paste("pval:",signif(pval,3),"\nlog2(fc):",round(fc,2))
ggplot(df,aes(x=df[[var]],y=auc,col=df[[var]]))+geom_violin()+geom_point()+
stat_summary(fun = "median",
geom = "crossbar",
width = 0.5)+
geom_text(aes(x=(length(v)+1)/2, label=l, y=0.9),colour="black")+ ylim(0.5,1)+xlab(var)+ylab("AUC")+
theme_bw()+theme(legend.position = "none",panel.border = element_rect(colour = "black", fill=NA), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0),text=element_text(size=20))
}
p1<-plotViolin(df,"mode")
p2<-plotViolin(df,"matrix")
p3<-plotViolin(df,"tissue")
p4<-plotViolin(df,"analyzer")
p5<-plotViolin(df,"tissue")
plotViolin(df,"mzrange")
df$auc<-c(0.71,0.65,0.71,0.77,0.78,0.8,0.68,0.71,0.69,0.74,0.84,0.77)
l="nothing"
plotViolin<-function(df,var){
v<-unique(df[[var]])
if(length(v)==2){
a<-df$auc[df[[var]]==v[1]]
b<-df$auc[df[[var]]==v[2]]
pval<-wilcox.test(a, b, alternative = "two.sided")$p.value
fc<-log2(mean(a)/mean(b))
}
else{
pval<-summary(aov(auc ~ df[[var]], data = df))[[1]]$`Pr(>F)`[1]
a<-df[[var]][which.max(df$auc)]
b<-df[[var]][which.min(df$auc)]
fc<-log2(mean(df$auc[df[[var]]==a])/mean(df$auc[df[[var]]==b]))
}
l<-paste("pval:",signif(pval,3),"\nlog2(fc):",round(fc,2))
ggplot(df,aes(x=df[[var]],y=auc,col=df[[var]]))+geom_violin()+geom_point()+
stat_summary(fun = "median",
geom = "crossbar",
width = 0.5)+
geom_text(aes(x=(length(v)+1)/2, label=l, y=0.9),colour="black")+ ylim(0.5,1)+xlab(var)+ylab("AUC")+
theme_bw()+theme(legend.position = "none",panel.border = element_rect(colour = "black", fill=NA), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0),text=element_text(size=20))
}
p1<-plotViolin(df,"mode")
p2<-plotViolin(df,"matrix")
p3<-plotViolin(df,"tissue")
p4<-plotViolin(df,"analyzer")
p5<-plotViolin(df,"tissue")
p6<-plotViolin(df,"mzrange")
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=3)
library(gridExtra)
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=3)
df$auc<-c(0.71,0.65,0.71,0.77,0.78,0.8,0.68,0.71,0.69,0.74,0.84,0.77)
l="nothing"
plotViolin<-function(df,var){
v<-unique(df[[var]])
if(length(v)==2){
a<-df$auc[df[[var]]==v[1]]
b<-df$auc[df[[var]]==v[2]]
pval<-wilcox.test(a, b, alternative = "two.sided")$p.value
fc<-log2(mean(a)/mean(b))
}
else{
pval<-summary(aov(auc ~ df[[var]], data = df))[[1]]$`Pr(>F)`[1]
a<-df[[var]][which.max(df$auc)]
b<-df[[var]][which.min(df$auc)]
fc<-log2(mean(df$auc[df[[var]]==a])/mean(df$auc[df[[var]]==b]))
}
l<-paste("pval:",signif(pval,3),"\nlog2(fc):",round(fc,2))
ggplot(df,aes(x=df[[var]],y=auc,col=df[[var]]))+geom_violin()+geom_point()+
stat_summary(fun = "median",
geom = "crossbar",
width = 0.5)+
geom_text(aes(x=(length(v)+1)/2, label=l, y=0.9),colour="black")+ ylim(0.5,1)+xlab(var)+ylab("AUC")+
theme_bw()+theme(legend.position = "none",panel.border = element_rect(colour = "black", fill=NA), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0),text=element_text(size=20))
}
p1<-plotViolin(df,"mode")
p2<-plotViolin(df,"matrix")
p3<-plotViolin(df,"tissue")
p4<-plotViolin(df,"analyzer")
p5<-plotViolin(df,"tissue")
p6<-plotViolin(df,"mzrange")
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=3)
df$auc<-c(0.71,0.65,0.71,0.77,0.78,0.8,0.68,0.71,0.69,0.74,0.84,0.77)
l="nothing"
plotViolin<-function(df,var){
v<-unique(df[[var]])
if(length(v)==2){
a<-df$auc[df[[var]]==v[1]]
b<-df$auc[df[[var]]==v[2]]
pval<-wilcox.test(a, b, alternative = "two.sided")$p.value
fc<-log2(mean(a)/mean(b))
}
else{
pval<-summary(aov(auc ~ df[[var]], data = df))[[1]]$`Pr(>F)`[1]
a<-df[[var]][which.max(df$auc)]
b<-df[[var]][which.min(df$auc)]
fc<-log2(mean(df$auc[df[[var]]==a])/mean(df$auc[df[[var]]==b]))
}
l<-paste("pval:",signif(pval,3),"\nlog2(fc):",round(fc,2))
ggplot(df,aes(x=df[[var]],y=auc,col=df[[var]]))+geom_violin()+geom_point()+
stat_summary(fun = "median",
geom = "crossbar",
width = 0.5)+
geom_text(aes(x=(length(v)+1)/2, label=l, y=0.9),colour="black")+ ylim(0.5,1)+xlab(var)+ylab("AUC")+
theme_bw()+theme(legend.position = "none",panel.border = element_rect(colour = "black", fill=NA), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0),text=element_text(size=20))
}
p1<-plotViolin(df,"mode")
p2<-plotViolin(df,"matrix")
p3<-plotViolin(df,"tissue")
p4<-plotViolin(df,"analyzer")
p5<-plotViolin(df,"tissue")
p6<-plotViolin(df,"mzrange")
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=3)
df$auc<-c(0.71,0.65,0.71,0.77,0.78,0.8,0.68,0.71,0.69,0.74,0.84,0.77)
l="nothing"
plotViolin<-function(df,var){
v<-unique(df[[var]])
if(length(v)==2){
a<-df$auc[df[[var]]==v[1]]
b<-df$auc[df[[var]]==v[2]]
pval<-wilcox.test(a, b, alternative = "two.sided")$p.value
fc<-log2(mean(a)/mean(b))
}
else{
pval<-summary(aov(auc ~ df[[var]], data = df))[[1]]$`Pr(>F)`[1]
a<-df[[var]][which.max(df$auc)]
b<-df[[var]][which.min(df$auc)]
fc<-log2(mean(df$auc[df[[var]]==a])/mean(df$auc[df[[var]]==b]))
}
l<-paste("pval:",signif(pval,3),"\nlog2(fc):",round(fc,2))
ggplot(df,aes(x=df[[var]],y=auc,col=df[[var]]))+geom_violin()+geom_point()+
stat_summary(fun = "median",
geom = "crossbar",
width = 0.5)+
geom_text(aes(x=(length(v)+1)/2, label=l, y=0.9),colour="black")+ ylim(0.5,1)+xlab(var)+ylab("AUC")+
theme_bw()+theme(legend.position = "none",panel.border = element_rect(colour = "black", fill=NA), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0),text=element_text(size=20))
}
p1<-plotViolin(df,"mode")
p2<-plotViolin(df,"matrix")
p3<-plotViolin(df,"tissue")
p4<-plotViolin(df,"analyzer")
p5<-plotViolin(df,"specimen")
p6<-plotViolin(df,"mzrange")
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=3)
df$mzrange<-!df$mzrange
df$auc<-c(0.71,0.65,0.71,0.77,0.78,0.8,0.68,0.71,0.69,0.74,0.84,0.77)
l="nothing"
plotViolin<-function(df,var){
v<-unique(df[[var]])
if(length(v)==2){
a<-df$auc[df[[var]]==v[1]]
b<-df$auc[df[[var]]==v[2]]
pval<-wilcox.test(a, b, alternative = "two.sided")$p.value
fc<-log2(mean(a)/mean(b))
}
else{
pval<-summary(aov(auc ~ df[[var]], data = df))[[1]]$`Pr(>F)`[1]
a<-df[[var]][which.max(df$auc)]
b<-df[[var]][which.min(df$auc)]
fc<-log2(mean(df$auc[df[[var]]==a])/mean(df$auc[df[[var]]==b]))
}
l<-paste("pval:",signif(pval,3),"\nlog2(fc):",round(fc,2))
ggplot(df,aes(x=df[[var]],y=auc,col=df[[var]]))+geom_violin()+geom_point()+
stat_summary(fun = "median",
geom = "crossbar",
width = 0.5)+
geom_text(aes(x=(length(v)+1)/2, label=l, y=0.9),colour="black")+ ylim(0.5,1)+xlab(var)+ylab("AUC")+
theme_bw()+theme(legend.position = "none",panel.border = element_rect(colour = "black", fill=NA), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), plot.title = element_text(hjust = 0),text=element_text(size=20))
}
p1<-plotViolin(df,"mode")
p2<-plotViolin(df,"matrix")
p3<-plotViolin(df,"tissue")
p4<-plotViolin(df,"analyzer")
p5<-plotViolin(df,"specimen")
p6<-plotViolin(df,"mzrange")
grid.arrange(p1,p2,p3,p4,p5,p6,nrow=3)
save.image("E:/06. in-source fragmentation/1. Environments/fragmentation 6.RData")
load("A:/06. in-source fragmentation/1. Environments/fragmentation 6.RData")
View(res.neg.20ppm)
View(res.pos.5ppm)
res.neg.5ppm
res.neg.5ppm[c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"),]
subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
tmp<-tmp[order(tmp$abbreviation),]
tmp
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G9-G15.csv")
tmp<-subset(res.pos.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G1-G8.csv")
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G9-G15.csv",row.names = F)
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G9-G15.csv",row.names = F)
tmp<-subset(res.pos.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G1-G8.csv",row.names = F)
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G9-G15.csv",row.names = F)
tmp<-subset(res.pos.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G1-G8.csv",row.names = F)
tmp$lipid_occurences
tmp$fragmentation
paste("M",tmp$fragmentation)
paste("M",tmp$fragmentation,sep="")
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G9-G15.csv",row.names = F)
tmp<-subset(res.pos.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G1-G8.csv",row.names = F)
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G9-G15.csv",row.names = F)
tmp<-subset(res.pos.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G1-G8.csv",row.names = F)
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G9-G15.csv",row.names = F)
tmp<-subset(res.pos.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
write.csv(tmp,"A:/06. in-source fragmentation/rMSIfragment annotations G1-G8.csv",row.names = F)
tmp<-subset(res.neg.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
write.csv(tmp,"A:/06. in-source fragmentation/Supplementary Table S6 -rMSIfragment annotations G9-G15.csv",row.names = F)
tmp<-subset(res.pos.5ppm,select=c("experimental_mz","exactmass","ppm_error","abbreviation","id","adduct","fragmentation","lipid_occurences","correlation","S"))
i<-order(tmp$abbreviation)
tmp<-tmp[order(tmp$abbreviation),]
tmp$fragmentation<-paste("M",tmp$fragmentation,sep="")
write.csv(tmp,"A:/06. in-source fragmentation/Supplementary Table S5 - rMSIfragment annotations G1-G8.csv",row.names = F)
rMSI2::plotPeakImageG(pks_neg,column=1)+coord_fixed()
pks_neg
rMSI2::plotPeakImageG(pks_neg,column=1)+coord_fixed()
is<-res.neg.5ppm$abbreviation=="PC 34:1"
IS
is
is<-which(res.neg.5ppm$abbreviation=="PC 34:1")
is
is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
is
rMSI2::plotPeakImageG(pks_neg,column=is[1])+coord_fixed()
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]])+coord_fixed()
library
library("ggplot2")
pks_neg
is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]])+coord_fixed()
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"))+coord_fixed()
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"))+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100),limits=c(0,(globalmax)),na.value="transparent")+
ggtitle(l)
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"))+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100)),na.value="transparent")+
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"))+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100)),na.value="transparent")
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"))+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_rows = 1)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,title_label = "asd")+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,plot_margin = 2)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,plot_margin = 4)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,plot_margin = 5)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,plot_margin = 1)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,plot_margin = 2)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,plot_margin = 3)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,plot_margin = 3,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
# PLOT EXAMPLE
```{r,fig.height=7}
pks_neg
is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
pks_neg
is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))
#pks_neg
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(paste(with(res.neg.5ppm,abbreviation,adduct,fragmentation,round(experimental_mz,4))))
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
#pks_neg
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
print(rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(paste(with(res.neg.5ppm,abbreviation,adduct,fragmentation,round(experimental_mz,4)))))
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
#pks_neg
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
print(rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(with(res.neg.5ppm,paste(abbreviation,adduct,fragmentation,round(experimental_mz,4)))))
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
#pks_neg
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
print(rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(with(res.neg.5ppm,paste(abbreviation,adduct,fragmentation,"\n",round(experimental_mz,4)))))
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
#pks_neg
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
print(rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i],"\nm/z",round(experimental_mz[i],4)))))
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
pks_neg$names
#pks_neg
tmp<-
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
t=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i],"\nm/z",round(experimental_mz[i],4)))
print(rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t))
ggsave(paste("A:/06. in-source fragmentation/SUP1/",t,".tiff"),dpi = 300)
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
#pks_neg
tmp<-
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
t=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i],"\nm/z",round(experimental_mz[i],4)))
t2=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i]))
rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(paste("A:/06. in-source fragmentation/SUP1/",t,".tiff"),dpi = 300)
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
ggsave(paste("A:/06. in-source fragmentation/SUP1/",t2,".tiff"),dpi = 300)
ggsave(paste("A:/06. in-source fragmentation/SUP1/",n,i,".tiff"),dpi = 300)
i
n
paste(n,i)
ggsave(paste("A:/06. in-source fragmentation/SUP1/",n,i,".tiff",sep=""),dpi = 300)
rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(paste("A:/06. in-source fragmentation/SUP1/",n,i,".tiff",sep=""),dpi = 300)
ggsave(paste("A:/06. in-source fragmentation/SUP1/",n,i,".tif",sep=""),dpi = 300,)
ggsave(paste("A:/06. in-source fragmentation/SUP1/",n,i,".tif",sep=""),dpi = 300)
ggsave(paste("A:/06. in-source fragmentation/SUP1/",n,i,".tiff",sep=""),dpi = 300)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",n,i,".png",sep=""),dpi = 300)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",n,".png",sep=""),dpi = 300)
rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(p,paste("A:/06. in-source fragmentation/Supplementary figures/",n,".png",sep=""),dpi = 300)
p<-rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(p,paste("A:/06. in-source fragmentation/Supplementary figures/",n,".png",sep=""),dpi = 300)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",n,".png",sep=""),p,dpi = 300)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",n,".png",sep=""),p)
paste("A:/06. in-source fragmentation/Supplementary figures/",n,".png",sep="")
#pks_neg
tmp<-
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
t=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i],"\nm/z",round(experimental_mz[i],4)))
t2=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i]))
p<-rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",gsub(":","_",n),t2,".png",sep=""),p)
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
gsub(":","_",n)
p<-rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",gsub(":","_",n),i,".png",sep=""),p)
#pks_neg
tmp<-
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation=="PC 34:1")){
t=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i],"\nm/z",round(experimental_mz[i],4)))
t2=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i]))
p<-rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",gsub(":","_",n),"_",i,".tiff",sep=""),p,dpi=300)
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
#pks_neg
for(n in c("PC 34:1","PC 33:1","PA 38:4","PC 38:3")){
for(i in which(res.neg.5ppm$abbreviation==n)){
t=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i],"\nm/z",round(experimental_mz[i],4)))
t2=with(res.neg.5ppm,paste(abbreviation[i],adduct[i],fragmentation[i]))
p<-rMSI2::plotPeakImageG(pks_neg,mass=res.neg.5ppm$experimental_mz[i],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
scale_fill_gradientn(colours = viridisLite::viridis(100))+ggtitle(t)
ggsave(paste("A:/06. in-source fragmentation/Supplementary figures/",gsub(":","_",n),"_",i,".tiff",sep=""),p,dpi=300)
}
}
# is<-res.neg.5ppm$mz_i[res.neg.5ppm$abbreviation=="PC 34:1"]
# rMSI2::plotPeakImageG(pks_neg,mass=pks_neg$mass[is[1]],plot_labels = c("G9","G10","G11","G12","G13","G14"),plot_cols = 6,display_colorbar = F)+coord_fixed()+
#     scale_fill_gradientn(colours = viridisLite::viridis(100))
SUBSET(res.neg.5ppm,abbreviation=="PC 34:1",formula)
SUBSsubsetET(res.neg.5ppm,abbreviation=="PC 34:1",formula)
subset(res.neg.5ppm,abbreviation=="PC 34:1",formula)
subset(res.neg.5ppm,abbreviation=="PC 33:1",formula)
subset(res.neg.5ppm,abbreviation=="PC 38:3",formula)
rMSIfragment:::plot_figure1(res.neg.5ppm)
library(XML)
install.packages("dplyr")
library(CompoundDb)
## Locate the file
hmdb_file <- system.file("sdf/HMDB_sub.sdf.gz", package = "CompoundDb")
## Extract the data
cmps <- compound_tbl_sdf(hmdb_file)
cmps
cmps$formula
## Extract the data
cmps <- compound_tbl_sdf("A:/14. 13-C Labelled Matrix/Data/structures.sdf")
